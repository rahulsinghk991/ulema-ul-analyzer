%
% License:  This  program  is  free software; you can redistribute it and/or
% modify  it  under the terms of the GNU General Public License as published
% by  the  Free Software Foundation; either version 3 of the License, or (at
% your  option)  any  later version. This program is distributed in the hope
% that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
% warranty  of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
% GNU General Public License for more details.
%

function UpdateBodyHeader(Scope)
% UPDATEBODYHEADER [ BodyMech 3.06.01 ]: user i/o to a header to BODY
% INPUT
%   Scope ['All';'Project';'Session';'Trial']
%   user i/o
% PROCESS
%   Generation of variables
% OUTPUT
%   GLOBAL: BODY.HEADER

% AUTHOR(S) AND VERSION-HISTORY
% $ Ver. 1.0 Creation (Jaap Harlaar, AZVU, Amsterdam, August 2000
% $ Ver 3.06.01 VUmc, Amsterdam, May 2006 (Jaap Harlaar en Caroline Doorenbosch)

% Copyright 2000-2006 This program is free software under the terms of the
% GNU General Public License (www.gnu.org)

% declaration
BodyMechFuncHeader

if isempty(BODY.HEADER)
    CreateBodyHeader('no project');
end

if nargin < 1, Scope='All'; end

defaults_project={...
    BODY.HEADER.FileName,...
    BODY.HEADER.ProjectName,...
    BODY.HEADER.ProjectCode,...
    date,...
    datestr(rem(now,1))...
    };

defaults_session={...
    BODY.HEADER.Session.Name,...
    BODY.HEADER.Session.Code,...
    BODY.HEADER.Session.Date,...
    BODY.HEADER.Session.Time,...
    BODY.HEADER.Session.Investigator,...
    BODY.HEADER.Session.Remarks,...
    BODY.HEADER.Subject.Name,...
    BODY.HEADER.Subject.Code,...
    BODY.HEADER.Subject.AdmRecordNo,...
    BODY.HEADER.Subject.DateOfBirth,...
    BODY.HEADER.Subject.Sexe,...
    BODY.HEADER.Subject.Height,...
    BODY.HEADER.Subject.Weight...
    };

defaults_trial={...
    BODY.HEADER.Trial.Name,...
    BODY.HEADER.Trial.Code,...
    BODY.HEADER.Trial.Time,...
    BODY.HEADER.Trial.MarkerDataFile,...
    BODY.HEADER.Trial.AnalogDataFile,...
    BODY.HEADER.Trial.Remarks...
    };

prompt_project={...
    'File Name (*.BMB)',...
    'Project name',...
    'Project code',...
    'File creation date',...
    'File creation time'...
    };

prompt_session={...
    'Session name',...
    'Session code',...
    'Session date',...
    'Session time',...
    'Session Investigator',...
    'Session remarks',...
    'Subject name',...
    'Subject code',...
    'Administration id.no',...
    'Date of birth',...
    'Sexe',...
    'Heigth (m)',...
    'Weigth (kg)'...
    };

prompt_trial={...
    'Trial name',...
    'Trial code',...
    'Trial time',...
    'Marker file',...
    'Analog signals file',...
    'Remarks'...
    };

headtext_p='Input Project HEADER data';
headtext_s='Input Session HEADER data';
headtext_t='Input Trial HEADER data';

if strcmp(Scope,'All') | strcmp(Scope,'Project'),
    BODY.HEADER.ModelType='<Project>';
    answer_p  = inputdlg(prompt_project,headtext_p,1,defaults_project,'on');
    if ~isempty(answer_p),
        BODY.HEADER.FileName=char(answer_p(1));
        BODY.HEADER.ProjectName=char(answer_p(2));
        BODY.HEADER.ProjectCode=char(answer_p(3));
        BODY.HEADER.FileCreationDate=char(answer_p(4));
        BODY.HEADER.FileCreationTime=char(answer_p(5));
    end
end


if strcmp(Scope,'All') | strcmp(Scope,'Session'),
    BODY.HEADER.ModelType='<Session>';
    answer_s  = inputdlg(prompt_session,headtext_s,1,defaults_session,'on');
    if ~isempty(answer_s),
        BODY.HEADER.Session.Name=char(answer_s(1));
        BODY.HEADER.Session.Code=char(answer_s(2));
        BODY.HEADER.Session.Date=char(answer_s(3));
        BODY.HEADER.Session.Time=char(answer_s(4));
        BODY.HEADER.Session.Investigator=char(answer_s(5));
        BODY.HEADER.Session.Remarks=char(answer_s(6));
        BODY.HEADER.Subject.Name=char(answer_s(7));
        BODY.HEADER.Subject.Code=char(answer_s(8));
        BODY.HEADER.Subject.AdmRecordNo=char(answer_s(9));
        BODY.HEADER.Subject.DateOfBirth=char(answer_s(10));
        BODY.HEADER.Subject.Sexe=char(answer_s(11));
        BODY.HEADER.Subject.Height=char(answer_s(12));
        BODY.HEADER.Subject.Weight=char(answer_s(13));
    end
end

if strcmp(Scope,'All') | strcmp(Scope,'Trial'),
    BODY.HEADER.ModelType='<Trial>';
    answer_t  = inputdlg(prompt_trial,headtext_t,1,defaults_trial,'on');

    if ~isempty(answer_t),
        BODY.HEADER.Trial.Name=char(answer_t(1));
        BODY.HEADER.Trial.Code=char(answer_t(2));
        BODY.HEADER.Trial.Time=char(answer_t(3));
        BODY.HEADER.Trial.MarkerDataFile=char(answer_t(4));
        BODY.HEADER.Trial.AnalogDataFile=char(answer_t(5));
        BODY.HEADER.Trial.Remarks=char(answer_t(6));
    end
end

BodyMechFuncHeader
return
% ============================================
% END ### UpdateBodyHeader ###
